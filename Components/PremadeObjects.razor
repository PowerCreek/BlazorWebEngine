@using BlazorWebEngine.Classes
@using System.Runtime.CompilerServices
@using Microsoft.AspNetCore.Components.Rendering

@code {

    public delegate RenderFragment StyleItemTemplate();

    public static StyleItemTemplate GetStyleItem(StyleFragment frag)
    {
        return () =>
        {
            Console.WriteLine("getting style item");
            return @<style @key=@($"{frag.Selector}_{frag.IsValid}")>@frag.HtmlRender()</style>;
        };
    }

    
    public static RenderFragment TestFragment(string selector, params (string,string)[] attributes)
    {
        
        Dictionary<string, object> attributeMap = new Dictionary<string, object>(
            new List<KeyValuePair<string, object>>(attributes
                .Select(e => new KeyValuePair<string, object>(e.Item1, e.Item2))));
        
        return
            @<div id="@selector"
                  @attributes=@attributeMap>

                @nameof(TestFragment)
            </div>;
    }

    public static RenderFragment TestFragment(string selector, IEnumerable<(string,string)> attributes)
    {
        return TestFragment(selector, attributes.ToArray());
    }

}